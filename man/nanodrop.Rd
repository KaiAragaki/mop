% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nanodrop.R
\name{nanodrop}
\alias{nanodrop}
\title{Make a nanodrop object}
\usage{
nanodrop(
  data,
  date = NULL,
  nucleotide = c("RNA", "DNA", "dsDNA", "dsRNA"),
  is_tidy = FALSE
)
}
\arguments{
\item{data}{a \code{data.frame} - or something coercible to one - containing
nanodrop data. See details for requirements.}

\item{date}{an optional character vector or something coercible to a \code{Date}
object with \code{lubridate::as_date}}

\item{nucleotide}{a character vector to specifying the analyte in the
nanodrop experiment. Must match one of the following: RNA, DNA, dsDNA, or
dsRNA.}

\item{is_tidy}{logical. Is the supplied data tidy?}
}
\value{
a \code{nanodrop} object
}
\description{
Make a nanodrop object
}
\details{
Making a nanodrop object 'by hand' (that is, not using
\code{read_nanodrop}) is not recommended, since it is challenging to ensure a
given \code{data.frame} is truly a valid nanodrop file. To increase reliability,
flexibility is reduced. As such, the supplied \code{data.frame} must \emph{at least}
have the following columns \emph{if} \code{is_tidy = TRUE}:
\itemize{
\item \code{date}
\item \code{sample_name}
\item \code{conc}
\item \code{a260_280}
\item \code{a230_280}
}

If \code{is_tidy = FALSE}, \emph{at least} the following columns must be provided:
\itemize{
\item \code{Date}
\item \code{Sample.Name}
\item \code{Nucleic.Acid.ng.uL.}
\item \code{A260.A280}
\item \code{A260.A230}
}

Note: technically, the given column names will be stripped of all
non-alphanumerics and forced \code{tolower}, then compared against the following:
\itemize{
\item \code{date}
\item \code{samplename}
\item \code{nucleicacidngul}
\item \code{a260a280}
\item \code{a260a230}
}

In both cases, other columns allowed are those that appear in Example A and
Example B below.

If there are additional columns provided, they will be silently dropped.
}
\examples{

# Example A: colnames allowed when is_tidy = FALSE
a <- system.file("extdata", "nanodrop.csv", package = "mop") |>
read_nanodrop()

colnames(a$data)

# Technically, these are the names that are checked for after the given names
# have alphanumerics removed and are converted to lowercase:

colnames(a$data) |> stringr::str_remove_all("[^[:alnum:]]") |> tolower()


# Example B: colnames allowed when is_tidy = TRUE
b <- a |> tidy_lab()

colnames(b$data)

}

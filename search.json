[{"path":"https://kaiaragaki.github.io/mop/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 mop authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kaiaragaki.github.io/mop/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kai Aragaki. Author, maintainer.","code":""},{"path":"https://kaiaragaki.github.io/mop/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aragaki K (2024). mop: 'broom'-like Interface Lab Data. R package version 0.0.0.9000, https://kaiaragaki.github.io/mop/.","code":"@Manual{,   title = {mop: A 'broom'-like Interface to Lab Data},   author = {Kai Aragaki},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://kaiaragaki.github.io/mop/}, }"},{"path":"https://kaiaragaki.github.io/mop/index.html","id":"mop","dir":"","previous_headings":"","what":"A broom-like Interface to Lab Data","title":"A broom-like Interface to Lab Data","text":"Data lab instruments often consistently untidy, can therefore programmatically tidied. package seeks tidy lab data much like broom tidies statistical objects, couple important differences: data type must read , read_* function. can’t really avoided: really practical way provide single function can accurately consistently determine source given file. Outputs tidy_lab data.frames. instead objects contain tidy data. allows packages interact downstream objects unique ways depending data type (ie, making generic functions utilize objects). prefer tidy data.frame (specifically, tibble), run scrub object.","code":""},{"path":"https://kaiaragaki.github.io/mop/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A broom-like Interface to Lab Data","text":"package can downloaded GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"KaiAragaki/mop\")"},{"path":"https://kaiaragaki.github.io/mop/index.html","id":"basic-workflow","dir":"","previous_headings":"","what":"Basic Workflow","title":"A broom-like Interface to Lab Data","text":"Using mop generally begins reading lab data ’s respective function. example, nanodrop file: Somethings note: nano currently tidy nano nanodrop object Additionally, read_nanodrop normally try extract nucleotide date information file name, supplied manually file named understandable. tidy lab object, pass tidy_lab: note, raw data stored nano$raw_data. operations make object tidy vary per object class, can found object’s documentation (?tidy_lab.nanodrop). Objects useful form semi-stable language functions packages operate . However, ’s often much simpler interact data flat tibble. can done using scrub: Note meta-data fields now become individual columns.","code":"library(mop)  nano <- system.file(\"extdata\", \"nanodrop.csv\", package = \"mop\") |>   read_nanodrop(nucleotide = \"RNA\", date = \"2021-08-14\")  nano #> <nanodrop[5]> #> # A tibble: 18 × 24 #>    Date            Sample.Name Nucleic.Acid.ng.… A260.A280 A260.A230  A260  A280 #>    <chr>           <chr>                   <dbl>     <dbl>     <dbl> <dbl> <dbl> #>  1 8/14/2021 8:26… Sample 1                 420.      2.03      2.29 10.5   5.16 #>  2 8/14/2021 8:27… Sample 2                 450.      2.06      2.26 11.2   5.46 #>  3 8/14/2021 8:28… Sample 3                 498.      2.06      2.28 12.4   6.03 #>  4 8/14/2021 8:28… Sample 4                 449.      2.05      2.25 11.2   5.48 #>  5 8/14/2021 8:29… Sample 5                 474.      2.03      2.29 11.9   5.85 #>  6 8/14/2021 8:29… Sample 6                 543.      2.00      2.17 13.6   6.80 #>  7 8/14/2021 8:30… Sample 7                 483.      2.07      2.24 12.1   5.84 #>  8 8/14/2021 8:31… Sample 8                 588.      2.07      1.97 14.7   7.08 #>  9 8/14/2021 8:31… Sample 9                 490.      2.07      2.25 12.2   5.91 #> 10 8/14/2021 8:32… Sample 10                256.      2.03      2.27  6.40  3.15 #> 11 8/14/2021 8:32… Sample 11                225.      2.03      2.27  5.62  2.77 #> 12 8/14/2021 8:33… Sample 12                429.      2.06      2.26 10.7   5.22 #> 13 8/14/2021 8:35… Sample 13                216.      2.02      2.27  5.39  2.66 #> 14 8/14/2021 8:35… Sample 14                218.      2.03      2.29  5.44  2.68 #> 15 8/14/2021 8:36… Sample 15                206.      2.03      2.24  5.15  2.54 #> 16 8/14/2021 8:37… Sample 16                426.      2.07      2.25 10.7   5.15 #> 17 8/14/2021 8:37… Sample 17                389.      2.06      2.28  9.74  4.73 #> 18 8/14/2021 8:38… Sample 18                560.      2.04      2.19 14.0   6.88 #> # … with 17 more variables: Nucleic.Acid.Factor <dbl>, #> #   Baseline.Correction..nm. <int>, Baseline.Absorbance <dbl>, #> #   Corrected..ng.uL. <lgl>, Corrected..CV <lgl>, Impurity.1 <lgl>, #> #   Impurity.1.A260 <lgl>, Impurity.1..CV <lgl>, Impurity.1.mM <lgl>, #> #   Impurity.2 <lgl>, Impurity.2.A260 <lgl>, Impurity.2..CV <lgl>, #> #   Impurity.2.mM <lgl>, Impurity.3 <lgl>, Impurity.3.A260 <lgl>, #> #   Impurity.3..CV <lgl>, Impurity.3.mM <lgl> #> # Nucelotide: RNA  #> # Is tidy: FALSE  #> # Date: 2021-08-14 nano_tidy <- tidy_lab(nano) nano_tidy #> <nanodrop[5]> #> # A tibble: 18 × 24 #>    date        sample_name  conc a260_280 a260_230  a260  a280 nucleic_acid_fac… #>    <chr>       <chr>       <dbl>    <dbl>    <dbl> <dbl> <dbl>             <dbl> #>  1 2021-08-14… Sample 1     420.     2.03     2.29 10.5   5.16                40 #>  2 2021-08-14… Sample 2     450.     2.06     2.26 11.2   5.46                40 #>  3 2021-08-14… Sample 3     498.     2.06     2.28 12.4   6.03                40 #>  4 2021-08-14… Sample 4     449.     2.05     2.25 11.2   5.48                40 #>  5 2021-08-14… Sample 5     474.     2.03     2.29 11.9   5.85                40 #>  6 2021-08-14… Sample 6     543.     2.00     2.17 13.6   6.80                40 #>  7 2021-08-14… Sample 7     483.     2.07     2.24 12.1   5.84                40 #>  8 2021-08-14… Sample 8     588.     2.07     1.97 14.7   7.08                40 #>  9 2021-08-14… Sample 9     490.     2.07     2.25 12.2   5.91                40 #> 10 2021-08-14… Sample 10    256.     2.03     2.27  6.40  3.15                40 #> 11 2021-08-14… Sample 11    225.     2.03     2.27  5.62  2.77                40 #> 12 2021-08-14… Sample 12    429.     2.06     2.26 10.7   5.22                40 #> 13 2021-08-14… Sample 13    216.     2.02     2.27  5.39  2.66                40 #> 14 2021-08-14… Sample 14    218.     2.03     2.29  5.44  2.68                40 #> 15 2021-08-14… Sample 15    206.     2.03     2.24  5.15  2.54                40 #> 16 2021-08-14… Sample 16    426.     2.07     2.25 10.7   5.15                40 #> 17 2021-08-14… Sample 17    389.     2.06     2.28  9.74  4.73                40 #> 18 2021-08-14… Sample 18    560.     2.04     2.19 14.0   6.88                40 #> # … with 16 more variables: baseline_correction_nm <int>, #> #   baseline_absorbance <dbl>, corrected_ngul <lgl>, corrected_cv <lgl>, #> #   impurity_1 <lgl>, impurity_1_a260 <lgl>, impurity_1_cv <lgl>, #> #   impurity_1_m_m <lgl>, impurity_2 <lgl>, impurity_2_a260 <lgl>, #> #   impurity_2_cv <lgl>, impurity_2_m_m <lgl>, impurity_3 <lgl>, #> #   impurity_3_a260 <lgl>, impurity_3_cv <lgl>, impurity_3_m_m <lgl> #> # Nucelotide: RNA  #> # Is tidy: TRUE  #> # Date: 2021-08-14 nano_scrub <- scrub(nano_tidy)  nano_scrub[c(1:3, (ncol(nano_scrub)-2):ncol(nano_scrub))] #> # A tibble: 18 × 6 #>    date                sample_name  conc exp_date   nucleotide is_tidy #>    <chr>               <chr>       <dbl> <date>     <chr>      <lgl>   #>  1 2021-08-14 20:26:49 Sample 1     420. 2021-08-14 RNA        TRUE    #>  2 2021-08-14 20:27:25 Sample 2     450. 2021-08-14 RNA        TRUE    #>  3 2021-08-14 20:28:07 Sample 3     498. 2021-08-14 RNA        TRUE    #>  4 2021-08-14 20:28:40 Sample 4     449. 2021-08-14 RNA        TRUE    #>  5 2021-08-14 20:29:17 Sample 5     474. 2021-08-14 RNA        TRUE    #>  6 2021-08-14 20:29:54 Sample 6     543. 2021-08-14 RNA        TRUE    #>  7 2021-08-14 20:30:30 Sample 7     483. 2021-08-14 RNA        TRUE    #>  8 2021-08-14 20:31:16 Sample 8     588. 2021-08-14 RNA        TRUE    #>  9 2021-08-14 20:31:50 Sample 9     490. 2021-08-14 RNA        TRUE    #> 10 2021-08-14 20:32:24 Sample 10    256. 2021-08-14 RNA        TRUE    #> 11 2021-08-14 20:32:59 Sample 11    225. 2021-08-14 RNA        TRUE    #> 12 2021-08-14 20:33:50 Sample 12    429. 2021-08-14 RNA        TRUE    #> 13 2021-08-14 20:35:16 Sample 13    216. 2021-08-14 RNA        TRUE    #> 14 2021-08-14 20:35:59 Sample 14    218. 2021-08-14 RNA        TRUE    #> 15 2021-08-14 20:36:34 Sample 15    206. 2021-08-14 RNA        TRUE    #> 16 2021-08-14 20:37:12 Sample 16    426. 2021-08-14 RNA        TRUE    #> 17 2021-08-14 20:37:50 Sample 17    389. 2021-08-14 RNA        TRUE    #> 18 2021-08-14 20:38:21 Sample 18    560. 2021-08-14 RNA        TRUE"},{"path":"https://kaiaragaki.github.io/mop/reference/as_nanodrop.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce object to nanodrop — as_nanodrop","title":"Coerce object to nanodrop — as_nanodrop","text":"Coerce object nanodrop","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/as_nanodrop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce object to nanodrop — as_nanodrop","text":"","code":"as_nanodrop(x, ...)  # S3 method for data.frame as_nanodrop(x, nucleotide = NULL, is_tidy = FALSE, date = NULL, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/as_nanodrop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce object to nanodrop — as_nanodrop","text":"x data.frame ... additional arguments passed respective functions nucleotide optional character vector describing measured nucleotide (DNA, RNA, dsDNA, dsRNA) is_tidy Logical. data already tidy? date Character coercible Date object via lubridate::as_date","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/as_nanodrop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce object to nanodrop — as_nanodrop","text":"nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/as_pcr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a scrubbed pcr object back to a pcr object — as_pcr","title":"Convert a scrubbed pcr object back to a pcr object — as_pcr","text":"Convert scrubbed pcr object back pcr object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/as_pcr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a scrubbed pcr object back to a pcr object — as_pcr","text":"","code":"as_pcr(x)"},{"path":"https://kaiaragaki.github.io/mop/reference/as_pcr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a scrubbed pcr object back to a pcr object — as_pcr","text":"x tibble - usually previously scrubbed pcr object.","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/as_pcr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a scrubbed pcr object back to a pcr object — as_pcr","text":"pcr object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/incucyte.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a nanodrop object — incucyte","title":"Make a nanodrop object — incucyte","text":"Make nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/incucyte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a nanodrop object — incucyte","text":"","code":"incucyte(data, platemap)"},{"path":"https://kaiaragaki.github.io/mop/reference/incucyte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a nanodrop object — incucyte","text":"data data.frame - something coercible one - containing nanodrop data. See details requirements. date optional character vector something coercible Date object lubridate::as_date nucleotide character vector specifying analyte nanodrop experiment. Must match one following: RNA, DNA, dsDNA, dsRNA. is_tidy logical. supplied data tidy?","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/incucyte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a nanodrop object — incucyte","text":"incucyte object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/incucyte.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a nanodrop object — incucyte","text":"Making nanodrop object 'hand' (, using read_nanodrop) recommended, since challenging ensure given data.frame truly valid nanodrop file. increase reliability, flexibility reduced. , supplied data.frame must least following columns is_tidy = TRUE: date sample_name conc a260_280 a230_280 is_tidy = FALSE, least following columns must provided: Date Sample.Name Nucleic.Acid.ng.uL. A260.A280 A260.A230 Note: technically, given column names stripped non-alphanumerics forced tolower, compared following: date samplename nucleicacidngul a260a280 a260a230 cases, columns allowed appear Example Example B . additional columns provided, silently dropped.","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/is_incucyte.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is a incucyte object — is_incucyte","title":"Test if an object is a incucyte object — is_incucyte","text":"Test object incucyte object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/is_incucyte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is a incucyte object — is_incucyte","text":"","code":"is_incucyte(incucyte)"},{"path":"https://kaiaragaki.github.io/mop/reference/is_incucyte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is a incucyte object — is_incucyte","text":"incucyte Object tested","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/is_incucyte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is a incucyte object — is_incucyte","text":"logical","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/is_nanodrop.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is a nanodrop object — is_nanodrop","title":"Test if an object is a nanodrop object — is_nanodrop","text":"Test object nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/is_nanodrop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is a nanodrop object — is_nanodrop","text":"","code":"is_nanodrop(nanodrop)"},{"path":"https://kaiaragaki.github.io/mop/reference/is_nanodrop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is a nanodrop object — is_nanodrop","text":"nanodrop Object tested","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/is_nanodrop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is a nanodrop object — is_nanodrop","text":"logical","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/mop-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mop: A 'broom'-like Interface to Lab Data — mop-package","title":"mop: A 'broom'-like Interface to Lab Data — mop-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://kaiaragaki.github.io/mop/reference/mop-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mop: A 'broom'-like Interface to Lab Data — mop-package","text":"Maintainer: Kai Aragaki adamaragaki@gmail.com (ORCID)","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/nanodrop.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a nanodrop object — nanodrop","title":"Make a nanodrop object — nanodrop","text":"Make nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/nanodrop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a nanodrop object — nanodrop","text":"","code":"nanodrop(   data,   date = NULL,   nucleotide = c(\"RNA\", \"DNA\", \"dsDNA\", \"dsRNA\"),   is_tidy = FALSE )"},{"path":"https://kaiaragaki.github.io/mop/reference/nanodrop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a nanodrop object — nanodrop","text":"data data.frame - something coercible one - containing nanodrop data. See details requirements. date optional character vector something coercible Date object lubridate::as_date nucleotide character vector specifying analyte nanodrop experiment. Must match one following: RNA, DNA, dsDNA, dsRNA. is_tidy logical. supplied data tidy?","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/nanodrop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a nanodrop object — nanodrop","text":"nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/nanodrop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a nanodrop object — nanodrop","text":"Making nanodrop object 'hand' (, using read_nanodrop) recommended, since challenging ensure given data.frame truly valid nanodrop file. increase reliability, flexibility reduced. , supplied data.frame must least following columns is_tidy = TRUE: date sample_name conc a260_280 a230_280 is_tidy = FALSE, least following columns must provided: Date Sample.Name Nucleic.Acid.ng.uL. A260.A280 A260.A230 Note: technically, given column names stripped non-alphanumerics forced tolower, compared following: date samplename nucleicacidngul a260a280 a260a230 cases, columns allowed appear Example Example B . additional columns provided, silently dropped.","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/nanodrop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a nanodrop object — nanodrop","text":"","code":"# Example A: colnames allowed when is_tidy = FALSE a <- system.file(\"extdata\", \"nanodrop.csv\", package = \"mop\") |> read_nanodrop()  colnames(a$data) #>  [1] \"Date\"                     \"Sample.Name\"              #>  [3] \"Nucleic.Acid.ng.uL.\"      \"A260.A280\"                #>  [5] \"A260.A230\"                \"A260\"                     #>  [7] \"A280\"                     \"Nucleic.Acid.Factor\"      #>  [9] \"Baseline.Correction..nm.\" \"Baseline.Absorbance\"      #> [11] \"Corrected..ng.uL.\"        \"Corrected..CV\"            #> [13] \"Impurity.1\"               \"Impurity.1.A260\"          #> [15] \"Impurity.1..CV\"           \"Impurity.1.mM\"            #> [17] \"Impurity.2\"               \"Impurity.2.A260\"          #> [19] \"Impurity.2..CV\"           \"Impurity.2.mM\"            #> [21] \"Impurity.3\"               \"Impurity.3.A260\"          #> [23] \"Impurity.3..CV\"           \"Impurity.3.mM\"             # Technically, these are the names that are checked for after the given names # have alphanumerics removed and are converted to lowercase:  colnames(a$data) |> stringr::str_remove_all(\"[^[:alnum:]]\") |> tolower() #>  [1] \"date\"                 \"samplename\"           \"nucleicacidngul\"      #>  [4] \"a260a280\"             \"a260a230\"             \"a260\"                 #>  [7] \"a280\"                 \"nucleicacidfactor\"    \"baselinecorrectionnm\" #> [10] \"baselineabsorbance\"   \"correctedngul\"        \"correctedcv\"          #> [13] \"impurity1\"            \"impurity1a260\"        \"impurity1cv\"          #> [16] \"impurity1mm\"          \"impurity2\"            \"impurity2a260\"        #> [19] \"impurity2cv\"          \"impurity2mm\"          \"impurity3\"            #> [22] \"impurity3a260\"        \"impurity3cv\"          \"impurity3mm\"            # Example B: colnames allowed when is_tidy = TRUE b <- a |> tidy_lab()  colnames(b$data) #>  [1] \"date\"                   \"sample_name\"            \"conc\"                   #>  [4] \"a260_280\"               \"a260_230\"               \"a260\"                   #>  [7] \"a280\"                   \"nucleic_acid_factor\"    \"baseline_correction_nm\" #> [10] \"baseline_absorbance\"    \"corrected_ngul\"         \"corrected_cv\"           #> [13] \"impurity_1\"             \"impurity_1_a260\"        \"impurity_1_cv\"          #> [16] \"impurity_1_m_m\"         \"impurity_2\"             \"impurity_2_a260\"        #> [19] \"impurity_2_cv\"          \"impurity_2_m_m\"         \"impurity_3\"             #> [22] \"impurity_3_a260\"        \"impurity_3_cv\"          \"impurity_3_m_m\""},{"path":"https://kaiaragaki.github.io/mop/reference/new_incucyte.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a Incucyte object — new_incucyte","title":"Constructor for a Incucyte object — new_incucyte","text":"Constructor Incucyte object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_incucyte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a Incucyte object — new_incucyte","text":"","code":"new_incucyte(   data = data.frame(),   raw_data = data.frame(),   date = lubridate::Date(),   nucleotide = character(),   is_tidy = logical() )"},{"path":"https://kaiaragaki.github.io/mop/reference/new_incucyte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a Incucyte object — new_incucyte","text":"data data.frame, restrictions form. raw_data data.frame, restrictions form. Typically represents read-data changes . date lubridate::Date object is_tidy logical. data.frame provided tidy?","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_incucyte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a Incucyte object — new_incucyte","text":"nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_nanodrop.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a nanodrop object — new_nanodrop","title":"Constructor for a nanodrop object — new_nanodrop","text":"low-level constructor, let un-recommended things without error. warned.","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_nanodrop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a nanodrop object — new_nanodrop","text":"","code":"new_nanodrop(   data = data.frame(),   raw_data = data.frame(),   date = lubridate::Date(),   nucleotide = character(),   is_tidy = logical() )"},{"path":"https://kaiaragaki.github.io/mop/reference/new_nanodrop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a nanodrop object — new_nanodrop","text":"data data.frame, restrictions form. raw_data data.frame, restrictions form. Typically represents read-data changes . date lubridate::Date object nucleotide character. likely DNA, RNA, dsDNA, even dsRNA. is_tidy logical. data.frame provided tidy?","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_nanodrop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a nanodrop object — new_nanodrop","text":"nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_pcr.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a pcr object — new_pcr","title":"Constructor for a pcr object — new_pcr","text":"Constructor pcr object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_pcr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a pcr object — new_pcr","text":"","code":"new_pcr(   data = data.frame(),   raw_data = raw(),   header = character(),   footer = character(),   date = lubridate::Date(),   experiment_type = character(),   wells = integer(),   is_tidy = logical() )"},{"path":"https://kaiaragaki.github.io/mop/reference/new_pcr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a pcr object — new_pcr","text":"data data.frame gp, restrictions form. raw_data raw, read provided file readr::read_file_raw() header data.frame, upper portion data body data. Usually contains run information. footer data.frame, lower portion data body data. Usually contains analysis information. May exist. date lubridate::Date object experiment_type character. wells Number wells plate is_tidy logical. data.frame provided tidy?","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_pcr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a pcr object — new_pcr","text":"pcr object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_spectramax.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a spectramax object — new_spectramax","title":"Constructor for a spectramax object — new_spectramax","text":"Constructor spectramax object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_spectramax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a spectramax object — new_spectramax","text":"","code":"new_spectramax(   data = data.frame(),   raw_data = raw(),   date = lubridate::Date(),   wavelengths = numeric(),   is_tidy = logical() )"},{"path":"https://kaiaragaki.github.io/mop/reference/new_spectramax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a spectramax object — new_spectramax","text":"data data.frame, restrictions form. raw_data raw, read provided file readr::read_file_raw() date lubridate::Date object is_tidy logical. data provided tidy? experiment_type character, restrictions form","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/new_spectramax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a spectramax object — new_spectramax","text":"spectramax object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/pad_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Add leading 0 to sample names — pad_zero","title":"Add leading 0 to sample names — pad_zero","text":"Add leading 0 sample names","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/pad_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add leading 0 to sample names — pad_zero","text":"","code":"pad_zero(sample_names)"},{"path":"https://kaiaragaki.github.io/mop/reference/pad_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add leading 0 to sample names — pad_zero","text":"sample_names vector sample names","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/pad_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add leading 0 to sample names — pad_zero","text":"sample name one zero padded","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/pad_zero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add leading 0 to sample names — pad_zero","text":"","code":"c(\"blueberry\", \"Sample 1\", \"Sample 10\", \"sample 2\", \"john\", \"larry\", \"toxic waste\", \"Sample 02\") |>   pad_zero() #> [1] \"blueberry\"   \"Sample 01\"   \"Sample 10\"   \"sample 2\"    \"john\"        #> [6] \"larry\"       \"toxic waste\" \"Sample 02\"    # pad_zero will not pad if it doesn't need to: c(\"Sample 1\", \"Sample 2\", \"Sample 9\") |> pad_zero() #> [1] \"Sample 1\" \"Sample 2\" \"Sample 9\"  # pad_zero is case sensitive, since these will be coming off a machine in a standardized format  c(\"sample 10\", \"sample 1\") |> pad_zero() #> [1] \"sample 10\" \"sample 1\"  c(\"Sample 10\", \"Sample 1\") |> pad_zero() #> [1] \"Sample 10\" \"Sample 01\""},{"path":"https://kaiaragaki.github.io/mop/reference/plate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set an object's plate data — plate_data","title":"Get or set an object's plate data — plate_data","text":"Get set object's plate data","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/plate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set an object's plate data — plate_data","text":"","code":"plate_data(x, ...)  # S3 method for spectramax plate_data(x, ...)  plate_data(x) <- value  # S3 method for spectramax plate_data(x) <- value"},{"path":"https://kaiaragaki.github.io/mop/reference/plate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set an object's plate data — plate_data","text":"x Object extract plate data ... Arguments passed respective methods value Value set plate .","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/plate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set an object's plate data — plate_data","text":"gp object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_incucyte.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an Incucyte File — read_incucyte","title":"Read an Incucyte File — read_incucyte","text":"Read Incucyte File","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_incucyte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an Incucyte File — read_incucyte","text":"","code":"read_incucyte(data, platemap)"},{"path":"https://kaiaragaki.github.io/mop/reference/read_incucyte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an Incucyte File — read_incucyte","text":"data Plotting data output Incucyte analysis platemap .PlateMap file output platemap maker","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_nanodrop.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a NanoDrop file — read_nanodrop","title":"Read in a NanoDrop file — read_nanodrop","text":"Read NanoDrop file","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_nanodrop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a NanoDrop file — read_nanodrop","text":"","code":"read_nanodrop(path, nucleotide = NULL, date = NULL, date_order = NULL)"},{"path":"https://kaiaragaki.github.io/mop/reference/read_nanodrop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a NanoDrop file — read_nanodrop","text":"path path NanoDrop .csv nucleotide optional character vector describing analyte detected. NULL (default), automatically try extract one file path. Valid values include RNA, DNA, dsDNA, dsRNA (NULL). date optional character vector coercible date object. NULL (default), automatically try extract one file path. See details detection methods. date_order optional character vector enforce order date read (date unspecified). Can \"ymd\", \"mdy\", \"dmy\"","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_nanodrop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a NanoDrop file — read_nanodrop","text":"nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_nanodrop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in a NanoDrop file — read_nanodrop","text":"function expects file tampered nanodrop machine , aside name. function calls read.delim guesses encoding (usually UTF-16LE, unless re-exported). less mysterious reading apparent .csv read.delim, keeps remember encoding (R often fails auto-detect). possible, attempts extract nucleotide type path provided. date NULL, function attempt extract date file name (whole file path). look ymd, mdy, dmy (order). detects first format, look second, etc. Note reading taken April 4th written 4_3_2021 misinterpreted. error can remedied specifying argument date_order","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_nanodrop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in a NanoDrop file — read_nanodrop","text":"","code":"system.file(\"extdata\", \"nanodrop.csv\", package = \"mop\") |>   read_nanodrop() #> <nanodrop[5]> #> # A tibble: 18 × 24 #>    Date          Sample.Name Nucleic.Acid.ng.uL. A260.A280 A260.A230  A260  A280 #>    <chr>         <chr>                     <dbl>     <dbl>     <dbl> <dbl> <dbl> #>  1 8/14/2021 8:… Sample 1                   420.      2.03      2.29 10.5   5.16 #>  2 8/14/2021 8:… Sample 2                   450.      2.06      2.26 11.2   5.46 #>  3 8/14/2021 8:… Sample 3                   498.      2.06      2.28 12.4   6.03 #>  4 8/14/2021 8:… Sample 4                   449.      2.05      2.25 11.2   5.48 #>  5 8/14/2021 8:… Sample 5                   474.      2.03      2.29 11.9   5.85 #>  6 8/14/2021 8:… Sample 6                   543.      2.00      2.17 13.6   6.80 #>  7 8/14/2021 8:… Sample 7                   483.      2.07      2.24 12.1   5.84 #>  8 8/14/2021 8:… Sample 8                   588.      2.07      1.97 14.7   7.08 #>  9 8/14/2021 8:… Sample 9                   490.      2.07      2.25 12.2   5.91 #> 10 8/14/2021 8:… Sample 10                  256.      2.03      2.27  6.40  3.15 #> 11 8/14/2021 8:… Sample 11                  225.      2.03      2.27  5.62  2.77 #> 12 8/14/2021 8:… Sample 12                  429.      2.06      2.26 10.7   5.22 #> 13 8/14/2021 8:… Sample 13                  216.      2.02      2.27  5.39  2.66 #> 14 8/14/2021 8:… Sample 14                  218.      2.03      2.29  5.44  2.68 #> 15 8/14/2021 8:… Sample 15                  206.      2.03      2.24  5.15  2.54 #> 16 8/14/2021 8:… Sample 16                  426.      2.07      2.25 10.7   5.15 #> 17 8/14/2021 8:… Sample 17                  389.      2.06      2.28  9.74  4.73 #> 18 8/14/2021 8:… Sample 18                  560.      2.04      2.19 14.0   6.88 #> # ℹ 17 more variables: Nucleic.Acid.Factor <dbl>, #> #   Baseline.Correction..nm. <int>, Baseline.Absorbance <dbl>, #> #   Corrected..ng.uL. <lgl>, Corrected..CV <lgl>, Impurity.1 <lgl>, #> #   Impurity.1.A260 <lgl>, Impurity.1..CV <lgl>, Impurity.1.mM <lgl>, #> #   Impurity.2 <lgl>, Impurity.2.A260 <lgl>, Impurity.2..CV <lgl>, #> #   Impurity.2.mM <lgl>, Impurity.3 <lgl>, Impurity.3.A260 <lgl>, #> #   Impurity.3..CV <lgl>, Impurity.3.mM <lgl> #> # Nucelotide: NA  #> # Is tidy: FALSE  #> # Date: NA"},{"path":"https://kaiaragaki.github.io/mop/reference/read_pcr.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a QuantStudio pcr file — read_pcr","title":"Read in a QuantStudio pcr file — read_pcr","text":"Read QuantStudio pcr file","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_pcr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a QuantStudio pcr file — read_pcr","text":"","code":"read_pcr(path)"},{"path":"https://kaiaragaki.github.io/mop/reference/read_pcr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a QuantStudio pcr file — read_pcr","text":"path path QuantStudio .xls","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_pcr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a QuantStudio pcr file — read_pcr","text":"pcr object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_spectramax.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and tidy a SPECTRAmax file — read_spectramax","title":"Read and tidy a SPECTRAmax file — read_spectramax","text":"Read tidy SPECTRAmax file","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_spectramax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and tidy a SPECTRAmax file — read_spectramax","text":"","code":"read_spectramax(path, date = Sys.Date(), wavelengths = NULL)"},{"path":"https://kaiaragaki.github.io/mop/reference/read_spectramax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and tidy a SPECTRAmax file — read_spectramax","text":"path Path SPECTRAmax .txt file date Date experiment. supplied, uses current date. wavelengths wavelengths read experiment?","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_spectramax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and tidy a SPECTRAmax file — read_spectramax","text":"list, following form: data tibble contains two columns - type, (tidy) data list-column. raw_data raw representation file, tidying date character. date experiment experiment_type character. type experiment (currently pq (Protein Quantification) mtt supported) tidy logical. always return TRUE read using read_spectramax","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/read_spectramax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and tidy a SPECTRAmax file — read_spectramax","text":"SPECTRAmax files read easily without tidying simultaneously, due non-rectangular structure. Therefore, tidying required read option supplied.","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. gplate gp_sec","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a lab object to a tidy tibble — scrub","title":"Convert a lab object to a tidy tibble — scrub","text":"Objects convenient way represent lab data allows downstream functions interact specific ways depending type. Sometimes, however, convenient work flat tibble. scrub converts lab object tibble","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a lab object to a tidy tibble — scrub","text":"","code":"scrub(x, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a lab object to a tidy tibble — scrub","text":"x object converted tibble ... additional arguments pass respective object's class method","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a lab object to a tidy tibble — scrub","text":"tibble","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.nanodrop.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a nanodrop object into a tibble — scrub.nanodrop","title":"Convert a nanodrop object into a tibble — scrub.nanodrop","text":"Convert nanodrop object tibble","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.nanodrop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a nanodrop object into a tibble — scrub.nanodrop","text":"","code":"# S3 method for nanodrop scrub(x, raw = FALSE, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.nanodrop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a nanodrop object into a tibble — scrub.nanodrop","text":"x nanodrop object raw data pulled x$raw_data? ... Unused","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.nanodrop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a nanodrop object into a tibble — scrub.nanodrop","text":"tibble","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.pcr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a pcr object into a tibble — scrub.pcr","title":"Convert a pcr object into a tibble — scrub.pcr","text":"Convert pcr object tibble","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.pcr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a pcr object into a tibble — scrub.pcr","text":"","code":"# S3 method for pcr scrub(x, include_header = FALSE, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.pcr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a pcr object into a tibble — scrub.pcr","text":"x pcr object include_header data x$header included? ... Unused","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.pcr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a pcr object into a tibble — scrub.pcr","text":"tibble","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.spectramax.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a spectramax object into a tibble — scrub.spectramax","title":"Convert a spectramax object into a tibble — scrub.spectramax","text":"Convert spectramax object tibble","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.spectramax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a spectramax object into a tibble — scrub.spectramax","text":"","code":"# S3 method for spectramax scrub(x, n = 1, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.spectramax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a spectramax object into a tibble — scrub.spectramax","text":"x spectramax object n List item number select data ... Unused","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/scrub.spectramax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a spectramax object into a tibble — scrub.spectramax","text":"tibble","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a lab object — tidy_lab.spectramax","title":"Tidy a lab object — tidy_lab.spectramax","text":"Tidy lab object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a lab object — tidy_lab.spectramax","text":"","code":"# S3 method for spectramax tidy_lab(x, ...)  tidy_lab(x, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a lab object — tidy_lab.spectramax","text":"x object tidy ... Arguments passed respective methods","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.incucyte_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy an incucyte object — tidy_lab.incucyte_data","title":"Tidy an incucyte object — tidy_lab.incucyte_data","text":"Tidy incucyte object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.incucyte_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy an incucyte object — tidy_lab.incucyte_data","text":"","code":"# S3 method for incucyte_data tidy_lab(x, force_tidy = FALSE, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.incucyte_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy an incucyte object — tidy_lab.incucyte_data","text":"x incucyte object tidy force_tidy logical. tidying take place, even is_tidy attribute TRUE? ... Unused","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.incucyte_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy an incucyte object — tidy_lab.incucyte_data","text":"incucyte object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.incucyte_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy an incucyte object — tidy_lab.incucyte_data","text":"function:","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.nanodrop.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a nanodrop object — tidy_lab.nanodrop","title":"Tidy a nanodrop object — tidy_lab.nanodrop","text":"Tidy nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.nanodrop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a nanodrop object — tidy_lab.nanodrop","text":"","code":"# S3 method for nanodrop tidy_lab(x, force_tidy = FALSE, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.nanodrop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a nanodrop object — tidy_lab.nanodrop","text":"x nanodrop object tidy force_tidy logical. tidying take place, even is_tidy attribute TRUE? ... Unused","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.nanodrop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a nanodrop object — tidy_lab.nanodrop","text":"nanodrop object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.nanodrop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy a nanodrop object — tidy_lab.nanodrop","text":"function: renames columns sensible substitutes converts date-times ISO 8601-esque date-time format (YYYY-MM-DD HH:MM:SS vs YYYY-MM-DDTHH:MM:SSZ) recommended manipulations data tidy, rather , tidy_nanodrop expects output fairly similar output read_nanodrop. tidy nanodrop object (usually) contain following columns: date date-time sample reading, YYYY-MM-DD HH:MM:SS sample_name name sample provided NanoDrop conc concentration nucleic acid ng/uL a260_280 absorbance 260nm / absorbance 280nm. Typically marker protein contamination. Pure nucleic acid typically around 2. a260_230 absorbance 260nm / absorbance 230nm. Typically marker guanadine salt contamination. Pure nucleic acid typically around 2. a260 absorbance 260nm, wavelength nucleic acids absorb strongly. a280 absorbance 280nm, wavelength proteins absorb strongly. remaining columns typically unused.","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.pcr.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy a PCR object — tidy_lab.pcr","title":"Tidy a PCR object — tidy_lab.pcr","text":"Tidy PCR object","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.pcr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy a PCR object — tidy_lab.pcr","text":"","code":"# S3 method for pcr tidy_lab(x, usr_standards = NULL, pad_zero = FALSE, ...)"},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.pcr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy a PCR object — tidy_lab.pcr","text":"x pcr object usr_standards Custom supplied standards pad_zero , say, Sample 1 become Sample 01? ... Unused","code":""},{"path":"https://kaiaragaki.github.io/mop/reference/tidy_lab.pcr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy a PCR object — tidy_lab.pcr","text":"pcr object","code":""}]
